## Custom Dockerfile
# This Dockerfile is used to build an ROS + VNC + Tensorflow image based on Ubuntu 18.04

FROM shreyasgokhale/google-cartographer-grpc
# FROM nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04


#### Updated VNC by Shreyas

ENV DISPLAY=:1 \
    VNC_PORT=5901 \
    NO_VNC_PORT=6901
EXPOSE $VNC_PORT $NO_VNC_PORT


ENV HOME=/headless \
    TERM=xterm \
    STARTUPDIR=/dockerstartup \
    INST_SCRIPTS=/headless/install \
    NO_VNC_HOME=/headless/noVNC \
    DEBIAN_FRONTEND=noninteractive \
    VNC_COL_DEPTH=24 \
    VNC_RESOLUTION=1280x1024 \
    VNC_PW=vncpassword \
    VNC_VIEW_ONLY=false
WORKDIR $HOME


# # Just in case the config did not get copied
COPY cloud-cartographer/postinstall/cloud_cartographer.launch /catkin_ws/install_isolated/share/cartographer_ros/launch/cloud_cartographer.launch
COPY cloud-cartographer/postinstall/cloud_server.lua /catkin_ws/install_isolated/share/cartographer_ros/configuration_files/cloud_server.lua 
COPY cloud-cartographer/postinstall/cloud_slam.lua /catkin_ws/install_isolated/share/cartographer_ros/configuration_files/cloud_slam.lua
COPY cloud-cartographer/start_server.sh /start_server.sh


### Add all install scripts for further steps
ADD ./vnc_files/common/install/ $INST_SCRIPTS/
ADD ./vnc_files/ubuntu/install/ $INST_SCRIPTS/
RUN find $INST_SCRIPTS -name '*.sh' -exec chmod a+x {} +

### Install some common tools
RUN $INST_SCRIPTS/tools.sh
ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'


### Install xvnc-server & noVNC - HTML5 based VNC viewer
RUN $INST_SCRIPTS/tigervnc.sh
RUN $INST_SCRIPTS/no_vnc.sh

### Install firefox and chrome browser
#RUN $INST_SCRIPTS/chrome.sh

### Install xfce UI
RUN $INST_SCRIPTS/xfce_ui.sh
ADD ./vnc_files/common/xfce/ $HOME/

### configure startup
RUN $INST_SCRIPTS/libnss_wrapper.sh
ADD ./vnc_files/common/scripts $STARTUPDIR
RUN $INST_SCRIPTS/set_user_permission.sh $STARTUPDIR $HOME


# Start server script
RUN chmod +x /start_server.sh


ENTRYPOINT ["/dockerstartup/vnc_startup.sh"]
CMD ["--wait"]